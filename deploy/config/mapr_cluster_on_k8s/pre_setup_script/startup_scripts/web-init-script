#!/bin/bash
#MAPR_UID=5000
#MAPR_GID=5000
#MAPR_CLDB_HOSTS="cldb-0.cldb-svc.mapr-cluster.svc.cluster.local"
#MAPR_ZK_HOSTS="zk-0.zk-svc.mapr-cluster.svc.cluster.local"
#DISKARGS=12
#MAPR_CLUSTER=archerx
#MAPR_USER=mapr
#MAPR_ROOT_PASSWORD=mapr
#MAPR_PASSWORD=mapr
NO=false
MAPR_BACKUP=${MAPR_BACKUP:-/tmp/backup}
MAPR_HOME=${MAPR_HOME:-/opt/mapr}
MEM_TOTAL=6291456
SECURE_CLUSTER=$NO

set_environment() {
    # Import our environment variables from systemd
    while read -r e; do
        eval "export $e"
    done <<< "$(tr "\000" "\n" < /proc/1/environ)"

    # Copy modified conf files to container
    if [ -d $MAPR_BACKUP/conf ]; then
        cp -p $MAPR_BACKUP/conf/* $MAPR_HOME/conf/
    else
         echo "Conf file replacement volume not connected"
    fi
    printenv >>/tmp/init_script.log 2>&1
    echo "MAPR_USER is $MAPR_USER" >>/tmp/init_script.log 2>&1
    success $YES
}

addMapRUser() {
        groupadd -g $MAPR_GID mapr >>/tmp/init_script.log 2>&1
        useradd -u $MAPR_UID -g $MAPR_GID mapr >>/tmp/init_script.log 2>&1
}

runConfigure() {
	/opt/mapr/server/configure.sh -C $MAPR_CLDB_HOSTS -Z $MAPR_ZK_HOSTS -N $MAPR_CLUSTER -M7 >>/tmp/init_script.log 2>&1
}
backup() {
	echo "taking backup" >>/tmp/init_script.log 2>&1
	cp -pr /opt/mapr/conf /tmp/backup/ 
}
startWarden() {
	systemctl daemon reload
	systemctl enable mapr-warden
	systemctl start mapr-warden
}
changePasswd() {
        echo "root:$MAPR_ROOT_PASSWORD" | chpasswd
        echo "$MAPR_USER:$MAPR_PASSWORD" | chpasswd
}
changeHostId() {
	rm -f /opt/mapr/hostid
	hexdump -n 4 -e '2/2 "%08X" 1 "\n"' /dev/random >/opt/mapr/hostid 2>&1
}



#######################################
###########INIT SCRIPT#################
#######################################
echo "++++++++++++++++++++++++" >>/tmp/init_script.log 2>&1
set_environment
echo "++++++++++++++++++++++++" >>/tmp/init_script.log 2>&1
addMapRUser
changeHostId
changePasswd
runConfigure
startWarden
backup
echo "Successfully setup the node" >>/tmp/init_script.log 2>&1
