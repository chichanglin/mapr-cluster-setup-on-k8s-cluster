apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: cldb-pdb
  namespace: mapr-cluster
spec:
  selector:
    matchLabels:
      role: all
  minAvailable: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cldb-cm
  namespace: mapr-cluster
data:
  cldb.conf: |
    cldb.min.fileservers: 1
    cldb.port: 7222
    cldb.numthreads: 10
    cldb.web.port: 7221
    cldb.web.https.port: 7443
    cldb.detect.dup.hostid.enabled: false
    hadoop.version: 0.20.2
    cldb.jmxremote.port: 7220
    num.volmirror.threads: 1
    enable.replicas.invariant.check: false
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: cldb
  namespace: mapr-cluster
spec:
  serviceName: "cldb-svc"
  replicas: 1
  template:
    metadata:
      labels:
        role: all
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - all
      volumes:
      - name: run
        emptyDir: {}
      - name: runlock
        emptyDir: {}
      - name: cgroups
        hostPath:
          path: /sys/fs/cgroup
      - name: logs
        hostPath:
          path: /root/k8s/cldb/logs
      - name: diskfile
        hostPath:
          path: /tmp/pod1
      - name: initfile
        hostPath:
          path: /tmp/cldbnodeinit
      - name: backup
        hostPath:
          path: /tmp/cldb_podbackup
      containers:
        - name: cldb
          imagePullPolicy: Always
          image: docker.artifactory/maprtech/cldb:6.0.0_4.0.0_centos7
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN" , "NET_ADMIN", "NET_BROADCAST", "SYS_PACCT", "SYS_NICE", "SYS_RESOURCE", "SYS_RAWIO", "IPC_LOCK", "SYSLOG", "SYS_TIME"]
          resources:
            requests:
              memory: "100Gi"
              cpu: "8"
          ports:
          - containerPort: 7222
            name: server
          - containerPort: 7221
            name: web
          - containerPort: 3888
            name: jmx
          - containerPort: 5660
            name: mfs1
          - containerPort: 5692
            name: mfs2
          - containerPort: 5724
            name: mfs3
          - containerPort: 5756
            name: mfs4
          env:
          - name : DISKARGS
            valueFrom:
              configMapKeyRef:
                name: mapr-cluster-configmap
                key: MAPR_MFS_DISKARGS
          - name: MAPR_MEMORY
            valueFrom:
              resourceFieldRef:
                containerName: cldb
                resource: requests.memory
          - name: MAPR_CLUSTER
            valueFrom:
              configMapKeyRef:
                name: mapr-cluster-configmap
                key: MAPR_CLUSTER
          - name: MAPR_CLDB_HOSTS
            valueFrom:
              configMapKeyRef:
                name: mapr-cluster-configmap
                key: MAPR_CLDB_HOSTS
          - name: MAPR_ZK_HOSTS
            valueFrom:
              configMapKeyRef:
                name: mapr-cluster-configmap
                key: MAPR_ZK_HOSTS
          - name: MAPR_HS_HOST
            valueFrom:
              configMapKeyRef:
                name: mapr-cluster-configmap
                key: MAPR_HS_HOST
          - name: MAPR_OT_HOSTS
            valueFrom:
              configMapKeyRef:
                name: mapr-cluster-configmap
                key: MAPR_OT_HOSTS
          - name: MAPR_DB
            valueFrom:
              configMapKeyRef:
                name: mapr-cluster-configmap
                key: MAPR_DB
          - name: MAPR_TZ
            valueFrom:
              configMapKeyRef:
                name: mapr-cluster-configmap
                key: MAPR_TZ
          - name: MAPR_HOME
            valueFrom:
              configMapKeyRef:
                name: mapr-cluster-configmap
                key: MAPR_HOME
          - name: MAPR_PORT
            valueFrom:
              configMapKeyRef:
                name: mapr-cluster-configmap
                key: MAPR_PORT
          - name: MAPR_USER
            valueFrom:
              secretKeyRef:
                name: mapr-user-secrets
                key: MAPR_USER
          - name: MAPR_GROUP
            valueFrom:
              secretKeyRef:
                name: mapr-user-secrets
                key: MAPR_GROUP
          - name: MAPR_UID
            valueFrom:
              secretKeyRef:
                name: mapr-user-secrets
                key: MAPR_UID
          - name: MAPR_GID
            valueFrom:
              secretKeyRef:
                name: mapr-user-secrets
                key: MAPR_GID
          - name: MAPR_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mapr-user-secrets
                key: MAPR_PASSWORD
          - name: MAPR_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mapr-user-secrets
                key: MAPR_ROOT_PASSWORD
          command: ["/bin/bash","-c","/tmp/cldbnodeinit"]
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /run/lock
            name: runlock
          - mountPath: /sys/fs/cgroup
            name: cgroups
            readOnly: true
          - mountPath: /opt/mapr/logs
            name: logs
          - mountPath: /tmp/diskfile.txt
            name: diskfile
          - mountPath: /tmp/cldbnodeinit
            name: initfile
          - mountPath: /tmp/backup
            name: backup
      nodeSelector:
        env: mapr-cluster-node
